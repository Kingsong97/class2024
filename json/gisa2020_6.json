[
    {
        "type": "정보처리기사",
        "question": "GoF(Gang of Four)의 디자인 패턴에서 행위 패턴에 속하는 것은?",
        "correct_answer": "Visitor",
        "desc": "행위 패턴에 속하는 Visitor 패턴은 객체의 구조와 작업을 분리하여 각 객체에 대해 실행될 연산을 정의할 수 있게 합니다."
    },
    {
        "type": "정보처리기사",
        "question": "객체지향 프로그램에서 데이터를 추상화하는 단위는?",
        "correct_answer": "클래스",
        "desc": "클래스는 객체지향 프로그래밍에서 데이터와 그 데이터에 대한 연산을 함께 묶는 주요한 추상화 단위입니다."
    },
    {
        "type": "정보처리기사",
        "question": "객체지향 기법에서 클래스들 사이의 '부분-전체(part-whole)' 관계 또는 '부분(is-a-part-of)'의 관계로 설명되는 연관성을 나타내는 용어는?",
        "correct_answer": "집단화",
        "desc": "'부분-전체' 관계는 집단화를 통해 표현됩니다. 이는 하나의 객체가 다른 객체의 구성 요소로 포함되는 관계를 설명합니다."
    },
    {
        "type": "정보처리기사",
        "question": "객체지향 분석 방법론 중 E-R 다이어그램을 사용하여 객체의 행위를 모델링하며, 객체 식별, 구조식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?",
        "correct_answer": "Coad와 Yourdon 방법",
        "desc": "Coad와 Yourdon 방법은 E-R 다이어그램을 사용하여 객체의 행위를 모델링하는 과정을 포함하는 객체지향 분석 방법론입니다."
    },
    {
        "type": "정보처리기사",
        "question": "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?",
        "correct_answer": "순차 코드",
        "desc": "순차 코드는 일련번호나 순번과 같이 순차적으로 코드를 부여하는 방식입니다."
    },
    {
        "type": "정보처리기사",
        "question": "소프트웨어 설계 시 구축된 플랫폼의 성능특성 분석에 사용되는 측정 항목이 아닌 것은?",
        "correct_answer": "서버 튜닝(Server Tuning)",
        "desc": "서버 튜닝은 측정 항목이 아니라 성능 향상을 위해 시스템 설정을 조정하는 과정입니다."
    },
    {
        "type": "정보처리기사",
        "question": "자료 사전에서 자료의 생략을 의미하는 기호는?",
        "correct_answer": "()",
        "desc": "자료 사전에서 '()'는 자료의 생략을 의미하는 기호로 사용됩니다."
    },
    {
        "type": "정보처리기사",
        "question": "검토회의 전에 요구사항 명세서를 미리 배포하여 사전 검토한 후 짧은 검토 회의를 통해 오류를 조기에 검출하는데 목적을 두는 요구사항 검토 방법은?",
        "correct_answer": "워크 스루",
        "desc": "워크 스루는 사전에 문서를 배포하고 회의를 통해 오류를 검출하는 과정을 포함하는 요구사항 검토 방법입니다."
    },
    {
        "type": "정보처리기사",
        "question": "CASE가 갖고 있는 주요 기능이 아닌 것은?",
        "correct_answer": "언어 번역",
        "desc": "언어 번역은 CASE의 주요 기능이 아니며, 보통 프로그래밍 언어의 컴파일러나 인터프리터가 담당하는 역할입니다."
    },
    {
        "type": "정보처리기사",
        "question": "XP(eXtreme Programming)의 5가지 가치로 거리가 먼 것은?",
        "correct_answer": "정형 분석",
        "desc": "XP은 의사소통, 간결함, 피드백, 용기, 존중의 가치를 중시합니다. 정형 분석은 XP의 5가지 가치와 거리가 있습니다."
    },
    {
        "type": "정보처리기사",
        "question": "DBMS 분석 시 고려사항으로 거리가 먼 것은?",
        "correct_answer": "네트워크 구성도",
        "desc": "네트워크 구성도는 DBMS의 성능이나 상호 작용보다는 네트워크 설계와 관련된 사항입니다."
    },
    {
        "type": "정보처리기사",
        "question": "HIPO(Hierarchy Input Process Output)에 대한 설명으로 거리가 먼 것은?",
        "correct_answer": "상향식 소프트웨어 개발을 위한 문서화 도구이다.",
        "desc": "HIPO는 문서화 도구이지만, 특히 상향식 소프트웨어 개발에 한정되지 않습니다."
    },
    {
        "type": "정보처리기사",
        "question": "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?",
        "correct_answer": "직관성",
        "desc": "직관성은 사용자 인터페이스가 명확하고 이해하기 쉬워야 한다는 원칙을 나타냅니다."
    },
    {
        "type": "정보처리기사",
        "question": "럼바우(Rumbaugh)의 객체지향 분석 절차를 가장 바르게 나열한 것은?",
        "correct_answer": "객체 모형 → 동적 모형 → 기능 모형",
        "desc": "럼바우의 방법론은 객체 모형에서 시작하여 동적 모형을 거쳐 기능 모형으로 이어지는 순서를 따릅니다."
    },
    {
        "type": "정보처리기사",
        "question": "데이터 흐름도(DFD)의 구성요소에 포함되지 않는 것은?",
        "correct_answer": "data dictionary",
        "desc": "데이터 사전(data dictionary)은 DFD의 구성요소가 아니라 DFD에서 사용하는 데이터에 대한 정의를 담고 있는 목록입니다."
    },
    {
        "type": "정보처리기사",
        "question": "UML 확장 모델에서 스테레오 타입 객체를 표현할 때 사용하는 기호로 맞는 것은?",
        "correct_answer": "<< >>",
        "desc": "UML에서 스테레오 타입은 << >> 기호로 표현됩니다."
    },
    {
        "type": "정보처리기사",
        "question": "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?",
        "correct_answer": "TP monitor",
        "desc": "TP 모니터는 트랜잭션 처리를 위한 미들웨어로, 트랜잭션의 관리와 모니터링을 담당합니다."
    },
    {
        "type": "정보처리기사",
        "question": "소프트웨어 개발 방법 중 요구사항 분석(requirements analysis)과 거리가 먼 것은?",
        "correct_answer": "설계 명세서 작성",
        "desc": "설계 명세서 작성은 요구사항 분석 이후의 단계로, 요구사항을 바탕으로 소프트웨어의 구조를 설계하는 작업입니다."
    },
    {
        "type": "정보처리기사",
        "question": "공통 모듈에 대한 명세 기법 중 해당 기능에 대해 일관되게 이해되고 한 가지로 해석될 수 있도록 작성하는 원칙은?",
        "correct_answer": "명확성",
        "desc": "명확성은 모듈이나 소프트웨어 컴포넌트의 기능과 목적이 명확하게 이해될 수 있도록 하는 설계 원칙입니다."
    },
    {
        "type": "정보처리기사",
        "question": "UML 모델에서 사용하는 Structural Diagram에 속하지 않는 것은?",
        "correct_answer": "Activity Diagram",
        "desc": "Activity Diagram은 UML의 행위 다이어그램에 속하며, 시스템의 동작과 흐름을 표현합니다."
    }
]